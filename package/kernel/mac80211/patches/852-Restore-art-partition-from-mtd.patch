From 1959d1dbb837c7b83c978826824ba7bee7f0b490 Mon Sep 17 00:00:00 2001
From: "winton.liu" <newtonliuwen@gmail.com>
Date: Mon, 12 Aug 2013 16:20:47 +0800
Subject: [PATCH 1/3] Restore art partition from mtd.

As AR9344 PCI address is only 16M, so if using 32M flash the art partition is unavaiable.
So use the function ar9300_eeprom_restore_mtd to restore art data.

Signed-off-by: winton.liu <newtonliuwen@gmail.com>
---
 drivers/net/wireless/ath/ath9k/ar9003_eeprom.c |   48 +++++++++++++++++++++++-
 1 file changed, 47 insertions(+), 1 deletion(-)

diff --git a/drivers/net/wireless/ath/ath9k/ar9003_eeprom.c b/drivers/net/wireless/ath/ath9k/ar9003_eeprom.c
index 3f27ae6..605fbbc 100644
--- a/drivers/net/wireless/ath/ath9k/ar9003_eeprom.c
+++ b/drivers/net/wireless/ath/ath9k/ar9003_eeprom.c
@@ -15,6 +15,9 @@
  */
 
 #include <asm/unaligned.h>
+#include <linux/kernel.h>
+#include <linux/mtd/mtd.h>
+#include <linux/err.h>
 #include "hw.h"
 #include "ar9003_phy.h"
 #include "ar9003_eeprom.h"
@@ -2934,6 +2937,44 @@ static const struct ar9300_eeprom *ar9300_eep_templates[] = {
 	&ar9300_x113,
 };
 
+static int ar9300_eeprom_restore_mtd(struct ath_hw *ah, u8 *mptr,
+                                       int mdata_size)
+{
+        struct ath_common *common = ath9k_hw_common(ah);
+        int num;
+        struct mtd_info *mtd_info = NULL;
+        size_t written;
+        for (num = 0; num < 64; num++) {
+                printk(".");
+                mtd_info = get_mtd_device(NULL, num);
+                if(mtd_info->type == MTD_ABSENT) {
+                        printk(" mtd %d not here\n",num);
+                        put_mtd_device(mtd_info);
+                        continue;
+                }
+
+                if (!strcmp("art",mtd_info->name)) {
+                    printk("Using %s for eeprom data..\n", mtd_info->name );
+                    break;
+                } else {
+                    put_mtd_device(mtd_info);
+                    mtd_info = NULL;
+                }
+        }
+
+        if (mtd_info == NULL) {
+         ath_err(common,"mtd restore failed");
+         return -EIO;
+        }
+
+        // all that remains now, is copying to mptr..
+//        printk("fetch from mtd %s: %d bytes to %0x8x",mtd_info->name,mdata_size,(u32) mptr);
+
+        mtd_read(mtd_info, 0x1000, mdata_size, &written, mptr);
+        put_mtd_device(mtd_info);
+        return 0;
+}
+
 static const struct ar9300_eeprom *ar9003_eeprom_struct_find_by_id(int id)
 {
 #define N_LOOP (sizeof(ar9300_eep_templates) / sizeof(ar9300_eep_templates[0]))
@@ -3270,7 +3311,12 @@ static int ar9300_eeprom_restore_internal(struct ath_hw *ah,
 	if (ath9k_hw_use_flash(ah)) {
 		u8 txrx;
 
-		ar9300_eeprom_restore_flash(ah, mptr, mdata_size);
+		ath_err(common, "try mtd restore to %8x ...\n", (u32)mptr);
+		if (ar9300_eeprom_restore_mtd(ah, mptr, mdata_size) < 0)
+		{
+			ath_err(common, "well, that failed..\n");
+			ar9300_eeprom_restore_flash(ah, mptr, mdata_size);
+		}
 
 		/* check if eeprom contains valid data */
 		eep = (struct ar9300_eeprom *) mptr;
-- 
1.7.9.5

